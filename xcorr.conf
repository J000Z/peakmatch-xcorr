# mode - ANALYSE, PEAKMATCH, FFTPRECACHE, POSTPROCESS or BRUTEFORCE
mode						= BRUTEFORCE

# more logging
verbose						= false

# data directories
dataset.full				= /events/full
dataset.sample				= /events/sample

# error will be thrown if any files are not this length. zero pad or truncate to this length 
expected-file-line-count	= 10240

# top K peaks (min and max), ordered by amplitude, which will be aligned together
# run-time varies as O(top-k-peaks ^ 2) - every event's top K peaks are aligned against every other event's top K peaks
top-k-peaks					= 2

# sample events every sampling-stride entries
# run-time varies as O(1/sampling-stride)
sampling-stride				= 5

# only calculate xcorr values for values where the amplitude is higher than this fraction of the peak amplitude
# the final xcorr value for a well-matching pair is dominated by the multiplication of two peaks together (1000 * 1000 >> 50 * 50) 
# setting this to a non-zero value means eliminating a large amount of noise from the calculations, and drastically speeding up the calculation
# tweak this value in ANALYSE phase: too high -> false negatives. too low -> performance degradation
top-amplitude-threshold		= 0.3

# threshold for candidates to be included
# this will be lower than the final xcorr calculated value
# tweak this value in ANALYSE phase: too high -> false negatives. too low -> too many false positives for post-processing
candidate-threshold			= 0.55

# threshold for the final FFT xcorr post-process step
final-threshold				= 0.7

# number of threads to use in the PEAKMATCH and POSTPROCESS steps. set this equal to the number of processor cores for optimal performance.
# (performance calculations in the ANALYSE phase don't use multi-threading, so extrapolations may be inaccurate by this factor)  
threads						= 2

# in-memory LRU FFT cache for FFT xcorr calculations.
# set to zero to disable this cache
fft-memory-cache-size		= 1000